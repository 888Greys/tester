name: 🚀 Deploy Gukas ML Agent (Fixed)

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: brand-design-development/gukas-ml

jobs:
  debug:
    name: 🔍 Debug Environment
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 Debug information
      run: |
        echo "=== Environment Debug ==="
        echo "Registry: ${{ env.REGISTRY }}"
        echo "Image Name: ${{ env.IMAGE_NAME }}"
        echo "Full Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "Repository: ${{ github.repository }}"
        echo "Actor: ${{ github.actor }}"
        echo "Ref: ${{ github.ref }}"
        echo "=========================="

  build:
    name: 🐳 Build and Push Image
    runs-on: ubuntu-latest
    needs: debug
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🧹 Free up disk space
      run: |
        echo "Disk space before cleanup:"
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker system prune -af
        echo "Disk space after cleanup:"
        df -h

    - name: 🔧 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 📝 Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,format=short
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 🔍 Show metadata
      run: |
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo "Labels: ${{ steps.meta.outputs.labels }}"

    - name: 🐳 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.buildkit
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        no-cache: true

    - name: ✅ Success notification
      run: |
        echo "🎉 Successfully built and pushed image!"
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
